# 1. Написати функцію яка приймає один параметр – список рядків my_list. Функція повертає новий список у якому міститься
# елементи з my_list за таким правилом:
# Якщо рядок стоїть на непарному місці my_list, то його замінити на перевернутий рядок. "qwe" на "ewq".
# Якщо на парному – залишити без зміни.

# def modify_list(my_list):
#     return [item[::-1] if i % 2 != 0 else item for i, item in enumerate(my_list)]
# original_list = ["abc", "def", "ghi", "jkl"]
# result_list = modify_list(original_list)
# print(result_list)

# 2. Написати функцію яка приймає один параметр – список рядків my_list.
# Функція повертає новий список у якому міститься елементи my_list у яких перший символ - буква "a".

# def filter_strings_starting_with_a(my_list):
#     return [item for item in my_list if item.startswith("a")]
# original_list = ["abcd", "dcba", "bacd", "dacb"]
# result_list = filter_strings_starting_with_a(original_list)
# print(result_list)

# 3. Написати функцію яка приймає один параметр – список рядків my_list.
# Функція повертає новий список у якому міститься елементи з my_list, у яких є символ - буква "a" на будь-якому місці.

# def filter_strings_containing_a(my_list):
#     return [item for item in my_list if 'a' in item]
# original_list = ["abcd", "dcba", "bacd", "dacb"]
# result_list = filter_strings_containing_a(original_list)
# print(result_list)

# 4. Написати функцію яка приймає один параметр - список рядків my_list у якому може бути як рядки (type str) і цілі числа (type int).
# Функція повертає новий список у якому містяться лише рядки з my_list.
# def filter_strings_only(my_list):
#     return list(filter(lambda x: isinstance(x, str), my_list))

# mixed_list = ["abcd", 123, "dcba", 456, "bacd", 789, "dacb"]
# result_list = filter_strings_only(mixed_list)
# print(result_list)

# 5. Написати функцію яка приймає один параметр – рядок my_str.
# Функція повертає новий список у якому містяться ті символи з my_str, які зустрічаються у рядку лише один раз.
# def unique_characters(my_str):
#     return [char for char in my_str if my_str.count(char) == 1]

# input_str = "abrakadabra"
# result_list = unique_characters(input_str)
# print(result_list)

# 6. Написати функцію яка приймає один параметр - два рядки.
# Функція повертає список у який помістити ті символи, які є в обох рядках хоча б один раз.
# def common_characters(str1, str2):
#     return list(set(str1) & set(str2))
# string1 = "abra"
# string2 = "kadabra"
# result_list = common_characters(string1, string2)
# print(result_list)

# 7. Написати функцію яка приймає два параметри - два рядки.
# Функція повертає список до якого входять ті символи, які є в обох рядках, але в кожному лише по одному разу.
# def unique_common_characters(str1, str2):
#     set1 = set(str1)
#     set2 = set(str2)
#     common_characters = set1.intersection(set2)
#     result_list = [char for char in str1 + str2 if char in common_characters]
#     return list(set(result_list))
# string1 = "abra"
# string2 = "kadabra"
# result_list = unique_common_characters(string1, string2)
# print(result_list)

# 8. Дано списки names та domains (створити самостійно). Написати функцію для генерування e-mail у форматі:
#     "ім'я . число від 100 до 999 @ стрінга з літер довжиною від 5 до 7 символів . домен"
# Прізвище та домен брати випадковим чином із заданих списків переданих у функцію у вигляді параметрів.
# Рядок і число генерувати випадковим чином.
# import random
# import string

# def create_email(domains, names):
#     name = random.choice(names)
#     number = random.randint(100, 999)
#     domain = random.choice(domains)

#     random_string = ''.join(random.choice(string.ascii_letters) for _ in range(random.randint(5, 7)))

#     email = f"{name}.{number}@{random_string}.{domain}"
#     return email

# names = ["andrey", "nicolas", "vlad", "bogdan", "countman", "alice"]
# domains = ["google.com", "amazon.org", "hillel.net", "urk.org", "python.com"]
# e_mail = create_email(domains, names)
# print(e_mail)

